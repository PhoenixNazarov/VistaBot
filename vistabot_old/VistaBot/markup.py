from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from . import config, utils


def kb_cancel():
    m = ReplyKeyboardMarkup(resize_keyboard=True)
    m.row(KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å'))
    return m


def bank_name_markup():
    m = ReplyKeyboardMarkup(resize_keyboard=True)
    m.row(KeyboardButton('–¢–∏–Ω—å–∫–æ—Ñ'))
    m.row(KeyboardButton('–°–±–µ—Ä–±–∞–Ω–∫'))
    m.row(KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å'))
    return m


def card_type_markup():
    m = ReplyKeyboardMarkup(resize_keyboard=True)
    m.row(KeyboardButton('VISA'))
    m.row(KeyboardButton('MasterCard'))
    m.row(KeyboardButton('Maestro'), KeyboardButton('–ú–∏—Ä'))
    m.row(KeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å'))
    return m


def admin():
    m = ReplyKeyboardMarkup(resize_keyboard=True)
    m.row(KeyboardButton('–ê–∫—Ç–∏–≤–Ω—ã–µ –æ–±–º–µ–Ω—ã'), KeyboardButton('–ó–∞—è–≤–∫–∏ –Ω–∞ –æ–¥–æ–±—Ä–µ–Ω–∏–∏'))
    m.row(KeyboardButton('–í—Å–µ —Ä–µ—Ñ–µ—Ä–∞–ª—ã'), KeyboardButton('–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞'))
    m.row(KeyboardButton('–°—á–µ—Ç–∞'), KeyboardButton('–ù–∞—Å—Ç—Ä–æ–π–∫–∏'))
    return m


def minus_referral_income():
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–°–Ω—è—Ç—å –±–∞–ª–∞–Ω—Å', callback_data='minus-ref-income'))
    return m


def admin_templates():
    m = InlineKeyboardMarkup()
    for cur in ['VISTA EUR', 'VISTA USD', 'THB']:
        m.row(InlineKeyboardButton(cur, callback_data=f'get-admin-templates_{cur}'))
    return m


def admin_templates_by_cur(templates, currency):
    m = InlineKeyboardMarkup()
    for template in templates:
        m.row(InlineKeyboardButton('{}{}'.format('‚úÖ ' if template.get('active') else '',
                                                 template.get('number')),
                                   callback_data=f'show-admin-template_{template.get("id")}'))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data=f'add-new-admin-template_{currency}'))
    m.row(InlineKeyboardButton('üîô –Ω–∞–∑–∞–¥', callback_data='back-to-admin-currencies'))
    return m


def admin_template_menu(template, delete=False):
    m = InlineKeyboardMarkup()
    t_id = template.get("id")
    currency = template.get("currency")
    if not template.get('active'):
        m.row(InlineKeyboardButton('–°–¥–µ–ª–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–º',
                                   callback_data=f'make-active-admin-template_{t_id}_{currency}'))
        if delete:
            m.row(InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data=f'fill-admin-template_{t_id}'),
                  InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'delete-cancel-admin-template_{t_id}'))
        else:
            m.row(InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data=f'delete-admin-template_{t_id}'))
    m.row(InlineKeyboardButton('üîô –Ω–∞–∑–∞–¥', callback_data=f'back-to-admin-templates_{currency}'))
    return m


def settings(moderate: bool):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é', callback_data='edit-commission'))
    m.row(InlineKeyboardButton('–û—Ç–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é' if moderate else '–í–∫–ª—é—á–∏—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é',
                               callback_data='switch-moderate'))
    return m


def main():
    m = ReplyKeyboardMarkup(resize_keyboard=True)
    m.row(KeyboardButton('–°–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É'))
    m.row(KeyboardButton('–ù–∞–π—Ç–∏ –∑–∞—è–≤–∫—É'), KeyboardButton('–ú–æ–∏ –∑–∞—è–≤–∫–∏'))
    m.row(KeyboardButton('–ú–æ–∏ —à–∞–±–ª–æ–Ω—ã'), KeyboardButton('–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç'))
    return m


def cb_rf(rate):
    if not rate: return None
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ü–æ –∫—É—Ä—Å—É –¶–ë–†–§', callback_data='set-cb-rf'))
    return m


def buy_order_from_channel(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–û–±–º–µ–Ω—è—Ç—å', url=f'https://t.me/{config.bot_name}?start=buyorder_{order_id}'))
    return m


def buy_order(order_id, partial=False):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–û–±–º–µ–Ω—è—Ç—å', callback_data='buy-that-order_{}'.format(order_id)))
    if partial:
        m.row(InlineKeyboardButton('–ß–∞—Å—Ç–∏—á–Ω—ã–π –≤—ã–∫—É–ø', callback_data=f'partial-buy-order_{order_id}'))
    return m


def my_templates(templates):
    m = InlineKeyboardMarkup()
    for temp in templates:
        t_id, name, _ = temp
        m.row(InlineKeyboardButton(name, callback_data='template-info_{}'.format(t_id)))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data='add-new-template'))
    return m


def template_markup(t_id, delete=False):
    m = InlineKeyboardMarkup()
    if delete:
        m.row(InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å', callback_data='delete-template-accept_{}'
                                   .format(t_id)),
              InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data='delete-template-decline_{}'.format(t_id)))
    else:
        m.row(InlineKeyboardButton('üóë –£–¥–∞–ª–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data='delete-template_{}'
                                   .format(t_id)))
    m.row(InlineKeyboardButton('üîô –Ω–∞–∑–∞–¥', callback_data='back-to-templates'))
    return m


def new_template_type():
    m = InlineKeyboardMarkup(row_width=2)
    m.add(*[InlineKeyboardButton(t_type, callback_data='new-template-type_{}'.format(t_type))
            for t_type in config.all_template_types.keys()])
    return m


def order_currency_from():
    m = InlineKeyboardMarkup(row_width=2)
    m.add(*[InlineKeyboardButton(t_type, callback_data='order-currency-from_{}'.format(t_type))
            for t_type in config.all_template_types.keys()])
    return m


def order_currency_to(currency_from):
    m = InlineKeyboardMarkup(row_width=2)
    m.add(*[InlineKeyboardButton(t_type, callback_data='order-currency-to_{}'.format(t_type))
            for t_type in config.all_template_types[currency_from]['allowed_pairs']])
    return m


def allow_partial_exchange():
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–î–∞', callback_data='partial-exchange_1'),
          InlineKeyboardButton('–ù–µ—Ç', callback_data='partial-exchange_0'))
    return m


def select_template_from(templates, t_type):
    m = InlineKeyboardMarkup()
    for temp in templates:
        tid, name = temp
        m.row(InlineKeyboardButton(name, callback_data='new-order-template_{}'.format(tid)))
    m.row(InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π', callback_data='new-order-another-temp_{}'.format(t_type)))
    return m


def select_template_to(templates, t_type):
    m = InlineKeyboardMarkup()
    if len(templates) > 1:
        m.row(InlineKeyboardButton('–í—ã–±—Ä–∞—Ç—å –≤—Å–µ', callback_data='select-all-templates'))
    for temp in templates:
        tid, name = temp
        m.row(InlineKeyboardButton(name, callback_data='new-order-template_{}'.format(tid)))
    m.row(InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π', callback_data='new-order-another-temp_{}'.format(t_type)))
    return m


def cancel_new_order(order_id, cancel=False):
    m = InlineKeyboardMarkup()
    if cancel:
        m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel-new-order-a_{order_id}'),
              InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'cancel-new-order-d_{order_id}'))
    else:
        m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'cancel-new-order_{order_id}'))
    return m


def edit_new_order(order_id, cancel=False):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'edit-new-order_{order_id}'))
    if cancel:
        m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel-new-order-a_{order_id}'),
              InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'cancel-new-edit-order-d_{order_id}'))
    else:
        m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'cancel-new-edit-order_{order_id}'))
    return m


def edit_what_new_order(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å —Å—É–º–º—É', callback_data=f'new-order-edit-amount_{order_id}'))
    m.row(InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å', callback_data=f'new-order-edit-exchange-rate_{order_id}'))
    m.row(InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'back-to-edit-new-order_{order_id}'))
    return m


def approve_new_order(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–û–¥–æ–±—Ä–∏—Ç—å', callback_data='new-order-approve_{}'.format(order_id)),
          InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data='new-order-decline_{}'.format(order_id)))
    return m


def find_order_currency_from(currencies):
    m = InlineKeyboardMarkup(row_width=2)
    m.add(*[InlineKeyboardButton(f'{cur}({cur_count})', callback_data=f'select-currency-from_{cur}')
            for cur, cur_count in currencies.items()])
    return m


def find_order_currency_to(currencies, currency_from):
    m = InlineKeyboardMarkup(row_width=2)
    m.add(*[InlineKeyboardButton(f'{cur}({cur_count})', callback_data=f'select-currency-to_{cur}_{currency_from}')
            for cur, cur_count in currencies.items()])
    return m


def find_orders_markup(orders):
    m = InlineKeyboardMarkup()
    for order in orders:
        order_id = order.get('id')
        m.row(InlineKeyboardButton(utils.get_find_order_button_text(order),
                                   callback_data='show-order-data_{}'.format(order_id)))
    return m


def select_t_to_buy_order(order_id, templates):
    m = InlineKeyboardMarkup()
    for temp in templates:
        t_id, name = temp
        m.row(InlineKeyboardButton(name, callback_data=f'buy-order-template-to_{t_id}_{order_id}'))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data=f'buy-order-new-template-to_{order_id}'))
    m.row(InlineKeyboardButton('üîô –∫ –∑–∞—è–≤–∫–µ', callback_data=f'back-to-order-info_{order_id}'))
    return m


def select_t_from_buy_order(order_id, t_to, templates):
    m = InlineKeyboardMarkup()
    for temp in templates:
        t_id, name = temp
        m.row(InlineKeyboardButton(name, callback_data=f'buy-order-template-from_{t_id}_{t_to}_{order_id}'))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data=f'buy-order-new-template-from_{t_to}_{order_id}'))
    m.row(InlineKeyboardButton('üîô –∫ –∑–∞—è–≤–∫–µ', callback_data=f'back-to-order-info_{order_id}'))
    return m


def select_t_to_buy_order_partial(order_id, templates):
    m = InlineKeyboardMarkup()
    for temp in templates:
        t_id, name = temp
        m.row(InlineKeyboardButton(name, callback_data=f'buy-order-p-template-to_{t_id}_{order_id}'))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω', callback_data=f'buy-order-p-new-template-to_{order_id}'))
    m.row(InlineKeyboardButton('üîô –∫ –∑–∞—è–≤–∫–µ', callback_data=f'back-to-order-info_{order_id}'))
    return m


def select_t_from_buy_order_partial(order_id, t_to, templates):
    m = InlineKeyboardMarkup()
    for temp in templates:
        t_id, name = temp
        m.row(InlineKeyboardButton(name,
                                   callback_data=f'buy-order-p-template-from_{t_id}_{t_to}_{order_id}'))
    m.row(InlineKeyboardButton('‚ûï –î–æ–±–∞–≤–∏—Ç—å —à–∞–±–ª–æ–Ω',
                               callback_data=f'buy-order-p-new-template-from_{t_to}_{order_id}'))
    m.row(InlineKeyboardButton('üîô –∫ –∑–∞—è–≤–∫–µ', callback_data=f'back-to-order-info_{order_id}'))
    return m


def partial_approve(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'partial-approve-accept_{order_id}'),
          InlineKeyboardButton('–û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data=f'partial-approve-decline_{order_id}'))
    return m


def cancel_buy_order(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'cancel-this-buy-order_{order_id}'))
    return m


def cancel_buy_order_approve(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å', callback_data=f'cancel-this-buy-order-a_{order_id}'),
          InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'cancel-this-buy-order-d_{order_id}'))
    return m


def first_pay(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ü–µ—Ä–≤–µ–ª', callback_data=f'first-pay-done_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç', callback_data=f'first-pay-delay_15-min_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç', callback_data=f'first-pay-delay_30-min_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 1 —á–∞—Å', callback_data=f'first-pay-delay_1-hour_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞', callback_data=f'first-pay-delay_3-hour_{order_id}'))
    m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'cancel-this-buy-order_{order_id}'))
    return m


def admin_first_pay_approve(order_id, approve=False):
    m = InlineKeyboardMarkup()
    if not approve:
        m.row(InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ', callback_data=f'approve-first-pay_{order_id}'))
    else:
        m.row(InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'approve-first-pay-a_{order_id}'),
              InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'approve-first-pay-d_{order_id}'))
    return m


def second_pay(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ü–µ—Ä–≤–µ–ª', callback_data=f'second-pay-done_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç', callback_data=f'second-pay-delay_15-min_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç', callback_data=f'second-pay-delay_30-min_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 1 —á–∞—Å', callback_data=f'second-pay-delay_1-hour_{order_id}'))
    m.row(InlineKeyboardButton('–ü–µ—Ä–µ–≤–µ–¥—É —á–µ—Ä–µ–∑ 3 —á–∞—Å–∞', callback_data=f'second-pay-delay_3-hour_{order_id}'))
    m.row(InlineKeyboardButton('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É', callback_data=f'cancel-this-buy-order_{order_id}'))
    return m


def second_pay_approve(order_id, approve=False):
    m = InlineKeyboardMarkup()
    if not approve:
        m.row(InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–∏–µ', callback_data=f'approve-second-pay_{order_id}'))
    else:
        m.row(InlineKeyboardButton('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å', callback_data=f'approve-second-pay-a_{order_id}'),
              InlineKeyboardButton('–Ω–∞–∑–∞–¥', callback_data=f'approve-second-pay-d_{order_id}'))
    m.row(InlineKeyboardButton('–ü–æ–ª—É—á–∏–ª –Ω–µ –≤—Å–µ', callback_data=f'not-enough-second-pay_{order_id}'))
    return m


def admin_buy_order_done(order_id):
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–ó–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', callback_data=f'set-order-done_{order_id}'))
    return m


def user_orders_markup(orders):
    m = InlineKeyboardMarkup()
    for order in orders:
        order_id = order.get('id')
        m.row(InlineKeyboardButton(utils.get_owner_orders_button_text(order),
                                   callback_data=f'show-my-order_{order_id}'))
    return m


def personal_cab():
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', callback_data='edit-personal-data'))
    m.row(InlineKeyboardButton('–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞', callback_data='show-referral-sys'))
    return m


def edit_personal_data():
    m = InlineKeyboardMarkup()
    m.row(InlineKeyboardButton('üñå –§–ò–û', callback_data='edit-data_fio'),
          InlineKeyboardButton('üñå –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞', callback_data='edit-data_phone'))
    m.row(InlineKeyboardButton('üñå E-mail', callback_data='edit-data_email'),
          InlineKeyboardButton('üñå –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å', callback_data='edit-data_timezone'))
    m.row(InlineKeyboardButton('üîô –Ω–∞–∑–∞–¥', callback_data='back-to-personal-cab'))
    return m


def referral_sys():
    m = InlineKeyboardMarkup()
    # m.row(InlineKeyboardButton('–ó–∞–ø—Ä–æ—Å–∏—Ç—å –≤—ã–≤–æ–¥', callback_data='make-referral-withdraw-request'))
    m.row(InlineKeyboardButton('üîô –Ω–∞–∑–∞–¥', callback_data='back-to-personal-cab'))
    return m
